#!/bin/bash

# API Contract Compliance Test
# Tests frontend API expectations vs backend implementation
# Generated by API Contract Audit Task

SERVER_URL="http://192.168.1.24:8080"
RESULTS_FILE="api-contract-test-results.txt"

echo "=== API CONTRACT COMPLIANCE TEST ===" | tee $RESULTS_FILE
echo "Server: $SERVER_URL" | tee -a $RESULTS_FILE
echo "Date: $(date)" | tee -a $RESULTS_FILE
echo "" | tee -a $RESULTS_FILE

# Test function
test_endpoint() {
    local method="$1"
    local path="$2"
    local description="$3"
    local priority="$4"
    
    echo -n "Testing $method $path... " | tee -a $RESULTS_FILE
    
    case $method in
        "GET")
            status=$(curl -s -o /dev/null -w "%{http_code}" "$SERVER_URL$path")
            ;;
        "POST")
            status=$(curl -s -X POST -H "Content-Type: application/json" -d '{}' -o /dev/null -w "%{http_code}" "$SERVER_URL$path")
            ;;
        "PUT")
            status=$(curl -s -X PUT -H "Content-Type: application/json" -d '{}' -o /dev/null -w "%{http_code}" "$SERVER_URL$path")
            ;;
        "DELETE")
            status=$(curl -s -X DELETE -o /dev/null -w "%{http_code}" "$SERVER_URL$path")
            ;;
    esac
    
    case $status in
        "200"|"201"|"204")
            echo "‚úÖ AVAILABLE (HTTP $status)" | tee -a $RESULTS_FILE
            ;;
        "401"|"403")
            echo "üîê AUTH_REQUIRED (HTTP $status)" | tee -a $RESULTS_FILE
            ;;
        "405")
            echo "‚ö†Ô∏è NOT_ALLOWED (HTTP $status)" | tee -a $RESULTS_FILE
            ;;
        "404")
            case $priority in
                "CRITICAL")
                    echo "üö® MISSING_CRITICAL (HTTP $status) - $description" | tee -a $RESULTS_FILE
                    ((CRITICAL_MISSING++))
                    ;;
                "HIGH")
                    echo "‚ö†Ô∏è MISSING_HIGH (HTTP $status) - $description" | tee -a $RESULTS_FILE
                    ((HIGH_MISSING++))
                    ;;
                "MEDIUM")
                    echo "‚ÑπÔ∏è MISSING_MEDIUM (HTTP $status) - $description" | tee -a $RESULTS_FILE
                    ((MEDIUM_MISSING++))
                    ;;
            esac
            ;;
        *)
            echo "‚ùì UNKNOWN (HTTP $status)" | tee -a $RESULTS_FILE
            ;;
    esac
}

# Initialize counters
CRITICAL_MISSING=0
HIGH_MISSING=0
MEDIUM_MISSING=0

echo "=== TESTING AVAILABLE ENDPOINTS ===" | tee -a $RESULTS_FILE

# Test currently working endpoints
test_endpoint "GET" "/api/v1/auth/check" "Authentication status check" "WORKING"
test_endpoint "GET" "/api/v1/dashboard/stats" "Dashboard statistics" "WORKING"
test_endpoint "GET" "/api/v1/ping" "System ping" "WORKING"
test_endpoint "GET" "/api/v1/info" "System info" "WORKING"

echo "" | tee -a $RESULTS_FILE
echo "=== TESTING AUTHENTICATION ENDPOINTS ===" | tee -a $RESULTS_FILE

# Test auth endpoints (may not work if auth disabled)
test_endpoint "POST" "/api/v1/auth/login" "User login" "AUTH"
test_endpoint "POST" "/api/v1/auth/logout" "User logout" "AUTH"
test_endpoint "POST" "/api/v1/auth/change-password" "Change password" "AUTH"

echo "" | tee -a $RESULTS_FILE
echo "=== TESTING MISSING CRITICAL ENDPOINTS ===" | tee -a $RESULTS_FILE

# Test missing critical endpoints (core CRUD operations)
test_endpoint "GET" "/api/v1/lists" "List all parental control lists" "CRITICAL"
test_endpoint "POST" "/api/v1/lists" "Create new list" "CRITICAL"
test_endpoint "GET" "/api/v1/lists/1" "Get specific list" "CRITICAL"
test_endpoint "PUT" "/api/v1/lists/1" "Update list" "CRITICAL"
test_endpoint "DELETE" "/api/v1/lists/1" "Delete list" "CRITICAL"

test_endpoint "GET" "/api/v1/lists/1/entries" "Get list entries" "CRITICAL"
test_endpoint "POST" "/api/v1/lists/1/entries" "Create list entry" "CRITICAL"
test_endpoint "PUT" "/api/v1/entries/1" "Update entry" "CRITICAL"
test_endpoint "DELETE" "/api/v1/entries/1" "Delete entry" "CRITICAL"

echo "" | tee -a $RESULTS_FILE
echo "=== TESTING MISSING HIGH PRIORITY ENDPOINTS ===" | tee -a $RESULTS_FILE

# Test missing high priority endpoints (rules management)
test_endpoint "GET" "/api/v1/time-rules" "Get time rules" "HIGH"
test_endpoint "GET" "/api/v1/lists/1/time-rules" "Get list time rules" "HIGH"
test_endpoint "POST" "/api/v1/lists/1/time-rules" "Create time rule" "HIGH"
test_endpoint "PUT" "/api/v1/time-rules/1" "Update time rule" "HIGH"
test_endpoint "DELETE" "/api/v1/time-rules/1" "Delete time rule" "HIGH"

test_endpoint "GET" "/api/v1/quota-rules" "Get quota rules" "HIGH"
test_endpoint "GET" "/api/v1/lists/1/quota-rules" "Get list quota rules" "HIGH"
test_endpoint "POST" "/api/v1/lists/1/quota-rules" "Create quota rule" "HIGH"
test_endpoint "PUT" "/api/v1/quota-rules/1" "Update quota rule" "HIGH"
test_endpoint "DELETE" "/api/v1/quota-rules/1" "Delete quota rule" "HIGH"

echo "" | tee -a $RESULTS_FILE
echo "=== TESTING MISSING MEDIUM PRIORITY ENDPOINTS ===" | tee -a $RESULTS_FILE

# Test missing medium priority endpoints (supporting features)
test_endpoint "GET" "/api/v1/quota-rules/1/usage" "Get quota usage" "MEDIUM"
test_endpoint "POST" "/api/v1/quota-rules/1/reset" "Reset quota usage" "MEDIUM"
test_endpoint "GET" "/api/v1/audit" "Get audit logs" "MEDIUM"
test_endpoint "GET" "/api/v1/config" "Get configuration" "MEDIUM"
test_endpoint "PUT" "/api/v1/config/test-key" "Update configuration" "MEDIUM"

echo "" | tee -a $RESULTS_FILE
echo "=== SUMMARY REPORT ===" | tee -a $RESULTS_FILE
echo "üö® CRITICAL endpoints missing: $CRITICAL_MISSING" | tee -a $RESULTS_FILE
echo "‚ö†Ô∏è HIGH priority endpoints missing: $HIGH_MISSING" | tee -a $RESULTS_FILE
echo "‚ÑπÔ∏è MEDIUM priority endpoints missing: $MEDIUM_MISSING" | tee -a $RESULTS_FILE
echo "üìä Total missing endpoints: $((CRITICAL_MISSING + HIGH_MISSING + MEDIUM_MISSING))" | tee -a $RESULTS_FILE

echo "" | tee -a $RESULTS_FILE
if [ $CRITICAL_MISSING -gt 0 ]; then
    echo "‚ùå CRITICAL FAILURE: $CRITICAL_MISSING essential endpoints missing" | tee -a $RESULTS_FILE
    echo "   Frontend functionality will be severely broken" | tee -a $RESULTS_FILE
    EXIT_CODE=2
elif [ $HIGH_MISSING -gt 0 ]; then
    echo "‚ö†Ô∏è HIGH IMPACT: $HIGH_MISSING important endpoints missing" | tee -a $RESULTS_FILE
    echo "   Core functionality will be limited" | tee -a $RESULTS_FILE
    EXIT_CODE=1
else
    echo "‚úÖ API CONTRACT COMPLIANCE: All critical endpoints available" | tee -a $RESULTS_FILE
    EXIT_CODE=0
fi

echo "" | tee -a $RESULTS_FILE
echo "Report saved to: $RESULTS_FILE" | tee -a $RESULTS_FILE
echo "Generated by: API Contract Audit Task - Phase 3" | tee -a $RESULTS_FILE

exit $EXIT_CODE 